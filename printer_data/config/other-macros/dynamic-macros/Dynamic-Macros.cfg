[gcode_macro CHAMELEON_HOME]
description: homes the tool selector. Needed before any tool change.
variable_ysplit_extruder: 1120
variable_chameleon_ysplit: 340
variable_chameleon_speed: 300
variable_chameleon_acc: 100
variable_extrude_amount: 120
variable_chameleon_is_homed: 0
gcode:
  # Check if require_full_tip_shaping exists in svv, if not, create and initialize it
  {% if 'require_full_tip_shaping' not in svv %}
    {% set shaping_list = ['empty', 'empty', 'empty', 'empty'] %}
    SAVE_VARIABLE VARIABLE=require_full_tip_shaping VALUE="{shaping_list}"
  {% else %}
    {% set shaping_list = svv.require_full_tip_shaping %}
  {% endif %}

  MANUAL_STEPPER STEPPER=selector SET_POSITION=0 
  MANUAL_STEPPER STEPPER=selector MOVE=-2.65 STOP_ON_ENDSTOP=1
  MANUAL_STEPPER STEPPER=selector SET_POSITION=0 
  MANUAL_STEPPER STEPPER=selector MOVE=0.12
  MANUAL_STEPPER STEPPER=selector SET_POSITION=0 
  MANUAL_STEPPER STEPPER=chameleon SET_POSITION=0 
  {% set svv = printer.save_variables.variables %}
  {% if svv.current_tool != "No tool is active, Chameleon is not homed" %}
    SAVE_VARIABLE VARIABLE=previous_tool VALUE={svv.current_tool}
  {% endif %}
  # Set the tool to position T0
  SET_GCODE_VARIABLE MACRO=CHAMELEON_HOME VARIABLE=chameleon_is_homed VALUE=1
  SAVE_VARIABLE VARIABLE=current_tool VALUE=0
  M118 Chameleon is Homed!

[gcode_macro CHAMELEON_TS0]
gcode:
  _TOOL_SELECT TOOL=0

[gcode_macro CHAMELEON_TS1]
gcode:
  _TOOL_SELECT TOOL=1

[gcode_macro CHAMELEON_TS2]
gcode:
  _TOOL_SELECT TOOL=2

[gcode_macro CHAMELEON_TS3]
gcode:
  _TOOL_SELECT TOOL=3

[gcode_macro _TOOL_SELECT]
gcode:
  {% set TOOL = params.TOOL|int %}
  {% if printer["gcode_macro CHAMELEON_HOME"].chameleon_is_homed != 1 or printer.stepper_enable.steppers['manual_stepper selector'] != True %}
    M118 Chameleon is not homed, must run CHAMELEON_HOME
  {% else %}
    {% set svv = printer.save_variables.variables %}
    SAVE_VARIABLE VARIABLE=previous_tool VALUE={svv.current_tool}
    M118 Chameleon is set to tool {TOOL}
    {% if TOOL == 0 %}
      MANUAL_STEPPER stepper=selector MOVE=0
    {% elif TOOL == 1 %}
      MANUAL_STEPPER stepper=selector MOVE=0.5
    {% elif TOOL == 2 %}
      MANUAL_STEPPER stepper=selector MOVE=1.0
    {% elif TOOL == 3 %}
      MANUAL_STEPPER stepper=selector MOVE=1.5
    {% endif %}
    SAVE_VARIABLE VARIABLE=current_tool VALUE={TOOL}
  {% endif %}
  
[gcode_macro CHAMELEON_TOOL_FREE]
description: Free filament path from selector and disable selector
gcode:
  {% if printer["gcode_macro CHAMELEON_HOME"].chameleon_is_homed != 1 or printer.stepper_enable.steppers['manual_stepper selector'] != True %}
    M118 Chameleon is not homed, must run CHAMELEON_HOME
  {% else %}
    {% set svv = printer.save_variables.variables %}
    {% set TOOL = svv.current_tool %}
    SAVE_VARIABLE VARIABLE=previous_tool VALUE={svv.current_tool}
    M118 Chameleon free filament path for tool {TOOL}
    {% if TOOL == 0 %}
      MANUAL_STEPPER stepper=selector MOVE=1 
    {% elif TOOL == 1 %}
      MANUAL_STEPPER stepper=selector MOVE=1.5
    {% elif TOOL == 2 %}
      MANUAL_STEPPER stepper=selector MOVE=0
    {% elif TOOL == 3 %}
      MANUAL_STEPPER stepper=selector MOVE=0.5
    {% endif %}
    MANUAL_STEPPER STEPPER=selector ENABLE=0               #disables steppers
    MANUAL_STEPPER STEPPER=chameleon ENABLE=0
    SET_GCODE_VARIABLE MACRO=CHAMELEON_HOME VARIABLE=chameleon_is_homed VALUE=0
    SAVE_VARIABLE VARIABLE=current_tool VALUE="No tool is active, Chameleon is not homed"
  {% endif %}

[gcode_macro CHAMELEON_Y_UNLOAD]
description: Unloads the filament from the Y-splitter and updates tip shaping requirements
gcode:
  {% set svv = printer.save_variables.variables %}
  {% set TOOL = svv.current_tool %}
  {% set YSPLIT_DIST = printer["gcode_macro CHAMELEON_HOME"].chameleon_ysplit %}
  {% set SPEED = printer["gcode_macro CHAMELEON_HOME"].chameleon_speed %}
  {% set ACC = printer["gcode_macro CHAMELEON_HOME"].chameleon_acc %}

  # Check if require_full_tip_shaping exists in svv, if not, create and initialize it
  {% if 'require_full_tip_shaping' not in svv %}
    {% set shaping_list = ['empty', 'empty', 'empty', 'empty'] %}
    SAVE_VARIABLE VARIABLE=require_full_tip_shaping VALUE="{shaping_list}"
  {% else %}
    {% set shaping_list = svv.require_full_tip_shaping %}
  {% endif %}

  # Update the tip shaping for the current tool to 'empty'
  {% set shaping_list = shaping_list[:TOOL] + ['empty'] + shaping_list[TOOL+1:] %}
  # Save the updated tip shaping list to variables.cfg
  SAVE_VARIABLE VARIABLE=require_full_tip_shaping VALUE="{shaping_list}"

  MANUAL_STEPPER STEPPER=chameleon SET_POSITION=0
  {% if printer["gcode_macro CHAMELEON_HOME"].chameleon_is_homed != 1 or printer.stepper_enable.steppers['manual_stepper selector'] != True %}
    M118 Chameleon is not homed, must run CHAMELEON_HOME
  {% else %}
    {% if TOOL == 0 or TOOL == 1 %}
      MANUAL_STEPPER stepper=chameleon MOVE=-{YSPLIT_DIST+30} SPEED={SPEED} ACCEL={ACC}
    {% else %}
      MANUAL_STEPPER stepper=chameleon MOVE={YSPLIT_DIST+30} SPEED={SPEED} ACCEL={ACC}
    {% endif %}
    MANUAL_STEPPER STEPPER=chameleon SET_POSITION=0
    M118 Unload tool {TOOL} from Y-splitter by {YSPLIT_DIST+30}mm and set tip shaping to 'empty' for tool {TOOL}
  {% endif %}

[gcode_macro CHAMELEON_LOAD_HARD]
description: Loads the normal hard filament into the Y-splitter and updates tip shaping requirements
gcode:
  {% set svv = printer.save_variables.variables %}
  {% set TOOL = svv.current_tool %}
  {% set YSPLIT_DIST = printer["gcode_macro CHAMELEON_HOME"].chameleon_ysplit %}
  {% set SPEED = printer["gcode_macro CHAMELEON_HOME"].chameleon_speed %}
  {% set ACC = printer["gcode_macro CHAMELEON_HOME"].chameleon_acc %}

  # Check if require_full_tip_shaping exists in svv, if not, create and initialize it
  {% if 'require_full_tip_shaping' not in svv %}
    {% set shaping_list = ['empty', 'empty', 'empty', 'empty'] %}
    SAVE_VARIABLE VARIABLE=require_full_tip_shaping VALUE="{shaping_list}"
  {% else %}
    {% set shaping_list = svv.require_full_tip_shaping %}
  {% endif %}

  # Update the tip shaping for the current tool (0 for hard filament)
  {% set shaping_list = shaping_list[:TOOL] + ['0'] + shaping_list[TOOL+1:] %}
  # Save the updated tip shaping list to variables.cfg
  SAVE_VARIABLE VARIABLE=require_full_tip_shaping VALUE="{shaping_list}"

  MANUAL_STEPPER STEPPER=chameleon SET_POSITION=0
  {% if printer["gcode_macro CHAMELEON_HOME"].chameleon_is_homed != 1 or printer.stepper_enable.steppers['manual_stepper selector'] != True %}
    M118 Chameleon is not homed, must run CHAMELEON_HOME
  {% else %}
    {% if TOOL == 0 or TOOL == 1 %}
      MANUAL_STEPPER stepper=chameleon MOVE={YSPLIT_DIST} SPEED={SPEED} ACCEL={ACC}
    {% else %}
      MANUAL_STEPPER stepper=chameleon MOVE=-{YSPLIT_DIST} SPEED={SPEED} ACCEL={ACC}
    {% endif %}
    MANUAL_STEPPER STEPPER=chameleon SET_POSITION=0
    M118 Load tool {TOOL} to Y-splitter by {YSPLIT_DIST}mm and set tip shaping to '0' for tool {TOOL}
  {% endif %}
  G92 E0

  
[gcode_macro CHAMELEON_CHK_ACTIVE_TOOL]
gcode:
  {% set svv = printer.save_variables.variables %}
  RESPOND TYPE=command MSG='Current active tool is tool {svv.current_tool}'
  RESPOND TYPE=command MSG='Previous active tool was tool {svv.previous_tool}'
  RESPOND TYPE=command MSG='Tool status:'
  {% for tool in range(4) %}
    {% set status = svv.require_full_tip_shaping[tool] %}
    {% if status == '0' %}
      {% set filament_type = 'hard' %}
    {% elif status == '1' %}
      {% set filament_type = 'soft' %}
    {% else %}
      {% set filament_type = 'empty' %}
    {% endif %}
    RESPOND TYPE=command MSG='Tool {tool}: {filament_type}'
  {% endfor %}

[gcode_macro CHAMELEON_LOAD_SOFT]
description: Loads soft TPU filament into the Y-splitter and updates tip shaping requirements
gcode:
  {% set svv = printer.save_variables.variables %}
  {% set TOOL = svv.current_tool %}
  {% set YSPLIT_DIST = printer["gcode_macro CHAMELEON_HOME"].chameleon_ysplit %}
  {% set SPEED = printer["gcode_macro CHAMELEON_HOME"].chameleon_speed %}
  {% set ACC = printer["gcode_macro CHAMELEON_HOME"].chameleon_acc %}

  # Check if require_full_tip_shaping exists in svv, if not, create and initialize it
  {% if 'require_full_tip_shaping' not in svv %}
    {% set shaping_list = [0, 0, 0, 0] %}
    SAVE_VARIABLE VARIABLE=require_full_tip_shaping VALUE="{shaping_list}"
  {% else %}
    {% set shaping_list = svv.require_full_tip_shaping %}
  {% endif %}

  # Update the tip shaping for the current tool
  {% set shaping_list = shaping_list[:TOOL] + [1] + shaping_list[TOOL+1:] %}
  # Save the updated tip shaping list to variables.cfg
  SAVE_VARIABLE VARIABLE=require_full_tip_shaping VALUE="{shaping_list}"

  MANUAL_STEPPER STEPPER=chameleon SET_POSITION=0
  {% if printer["gcode_macro CHAMELEON_HOME"].chameleon_is_homed != 1 or printer.stepper_enable.steppers['manual_stepper selector'] != True %}
    M118 Chameleon is not homed, must run CHAMELEON_HOME
  {% else %}
    # Set the appropriate move distance based on the current tool
    {% if TOOL == 0 or TOOL == 1 %}
      MANUAL_STEPPER stepper=chameleon MOVE={YSPLIT_DIST} SPEED={SPEED} ACCEL={ACC}
    {% else %}
      MANUAL_STEPPER stepper=chameleon MOVE=-{YSPLIT_DIST} SPEED={SPEED} ACCEL={ACC}
    {% endif %}
    MANUAL_STEPPER STEPPER=chameleon SET_POSITION=0
    M118 Load tool {TOOL} to Y-splitter by {YSPLIT_DIST}mm and set tip shaping to '1' for tool {TOOL}
  {% endif %}
  G92 E0

      
[gcode_macro WIPE]
# assumes we're already parked.
gcode:
  G1 X170 F8000
  G1 X250
  G1 X170
  G1 X250

  
[gcode_macro T0]
description: Changes the filament to that loaded in tool 0
gcode:
  # fetch current tool
  {% set TOOL= printer["gcode_macro CHAMELEON_HOME"].tool %}
  # Pause the print
  PAUSE
  {% if TOOL != 0 %}
    TOOL_SELECT TOOL={TOOL}
    EXTRUDER_UNLOAD
  {% endif %}

  # Select the new tool 
  {% set TOOL=0 %}
  SET_GCODE_VARIABLE MACRO=CHAMELEON_HOME VARIABLE=tool VALUE={TOOL}
  TOOL_SELECT TOOL={TOOL}
  # CHAMELEON_LOAD TOOL={TOOL} YSPLIT_DIST=
  EXTRUDER_LOAD
  TOOL_FREE TOOL={TOOL}
  # wipe the nozzle a couple of times
  WIPE
  # continue printing
  RESUME

[gcode_macro T1]
description: Changes the filament to that loaded in tool 1
gcode:
  # fetch current tool
  {% set TOOL= printer["gcode_macro CHAMELEON_HOME"].tool %}
  {% set YSPLIT_DIST=printer["gcode_macro CHAMELEON_HOME"].ysplit_extruder %}
  # Pause the print
  {% if TOOL != 1 %}
    TOOL_SELECT TOOL={TOOL}
    EXTRUDER_UNLOAD
  {% endif %}
  # Select the new tool 
  {% set TOOL=1 %}
  SET_GCODE_VARIABLE MACRO=CHAMELEON_HOME VARIABLE=tool VALUE={TOOL}
  TOOL_SELECT TOOL={TOOL}
  
  EXTRUDER_LOAD
  TOOL_FREE TOOL={TOOL}
  # wipe the nozzle a couple of times
  WIPE
  # continue printing
  RESUME

[gcode_macro T2]
description: Changes the filament to that loaded in tool 2
gcode:
  # fetch current tool
  {% set TOOL= printer["gcode_macro CHAMELEON_HOME"].tool %}
  {% set YSPLIT_DIST=printer["gcode_macro CHAMELEON_HOME"].ysplit_extruder %}
  # Pause the print
  PAUSE
  {% if TOOL != 2 %}
    TOOL_SELECT TOOL={TOOL}
    EXTRUDER_UNLOAD
  {% endif %}

  # Select the new tool 
  {% set TOOL=2 %}
  SET_GCODE_VARIABLE MACRO=CHAMELEON_HOME VARIABLE=tool VALUE={TOOL}
  TOOL_SELECT TOOL={TOOL}
  
  EXTRUDER_LOAD
  TOOL_FREE TOOL={TOOL}
  # wipe the nozzle a couple of times
  WIPE
  # continue printing
  RESUME

[gcode_macro T3]
description: Changes the filament to that loaded in tool 3
gcode:
  # fetch current tool
  {% set TOOL= printer["gcode_macro CHAMELEON_HOME"].tool %}
  {% set YSPLIT_DIST=printer["gcode_macro CHAMELEON_HOME"].ysplit_extruder %}
  # Pause the print
  PAUSE
  {% if TOOL != 3 %}
    TOOL_SELECT TOOL={TOOL}
    EXTRUDER_UNLOAD
  {% endif %}

  # Select the new tool 
  {% set TOOL=3 %}
  SET_GCODE_VARIABLE MACRO=CHAMELEON_HOME VARIABLE=tool VALUE={TOOL}
  TOOL_SELECT TOOL={TOOL}
  
  EXTRUDER_LOAD
  TOOL_FREE TOOL={TOOL}
  # wipe the nozzle a couple of times
  WIPE
  # continue printing
  RESUME

[gcode_macro Update_Dynamic_Macros]
gcode:
     DYNAMIC_MACRO